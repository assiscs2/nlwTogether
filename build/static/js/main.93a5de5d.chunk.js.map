{"version":3,"sources":["assets/images/illustration.svg","assets/images/logo.svg","components/Button.tsx","services/firebase.ts","contexts/AuthContext.tsx","hooks/useAuth.ts","pages/NewRoom.tsx","assets/images/google-icon.svg","pages/Home.tsx","components/Question/index.tsx","assets/images/copy.svg","components/RoomCode.tsx","hooks/useRoom.ts","pages/Room.tsx","assets/images/delete.svg","assets/images/check.svg","assets/images/answer.svg","pages/AdminRoom.tsx","App.tsx","index.tsx"],"names":["Button","isOutlined","props","className","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","database","AuthContext","createContext","AuthContextProvider","useState","user","setUser","a","provider","GoogleAuthProvider","signInWithPopup","result","displayName","photoURL","uid","Error","id","name","avatar","useEffect","unsubscribe","onAuthStateChanged","Provider","value","signInWithGoogle","children","useAuth","useContext","NewRoom","history","useHistory","newRoom","setNewRoom","event","preventDefault","trim","roomRef","ref","push","title","authorId","firebaseRoom","key","src","illustationImg","alt","logoImg","onSubmit","type","placeholder","onChange","target","to","Home","roomCode","setRoomCode","get","exists","alert","val","endedAt","onClick","googleIconImg","Question","content","author","isAnswered","isHighlighted","cx","answered","highlighted","RoomCode","navigator","clipboard","writeText","code","copyImg","useRoom","roomId","questions","setQuestions","setTitle","on","room","databaseRoom","firebaseQuestions","parsedQuestions","Object","entries","map","likeCount","values","likes","length","likeId","find","off","Room","params","useParams","newQuestion","setNewQuestion","question","questionId","remove","disabled","aria-label","handleLikeQuestion","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","AdminRoom","update","Date","window","confirm","handleCheckQuestionAsAnswered","checkImg","handleHighlightQuestion","answerImg","handleDeleteQuestion","deleteImg","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.93a5de5d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/illustration.8aeb45a4.svg\";","export default __webpack_public_path__ + \"static/media/logo.3cce2a2f.svg\";","import { ButtonHTMLAttributes } from 'react';\r\n\r\nimport '../styles/button.scss';\r\n\r\n\r\ntype ButtonProps = ButtonHTMLAttributes <HTMLButtonElement> & {\r\n  isOutlined?: boolean;\r\n};\r\n\r\nexport function Button({isOutlined = false, ...props}: ButtonProps) {\r\n\r\n  return (\r\n    <button \r\n    className={`button ${isOutlined ? 'outlined' : ''}`}\r\n    {...props} />\r\n    );\r\n}\r\n\r\n","\r\nimport firebase from 'firebase/app';\r\n\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID\r\n}; \r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst auth = firebase.auth();\r\nconst database = firebase.database();\r\n\r\nexport { firebase, auth, database };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// export const auth = firebase.auth();\r\n// export const database = firebase.database();\r\n\r\n\r\n\r\n\r\n// Import the functions you need from the SDKs you need\r\n\r\n// import { initializeApp } from \"firebase/app\";\r\n// // TODO: Add SDKs for Firebase products that you want to use\r\n// // https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// import 'firebase/auth';\r\n// import 'firebase/database';\r\n\r\n// // Initialize Firebase\r\n// export const app = initializeApp(firebaseConfig);\r\n\r\n// export const auth = app.auth();\r\n// export const database = app.database();\r\n\r\n// Initialize Firebase\r\n// export const auth = app.auth();\r\n// export const database = app.database();\r\n\r\n// const firebase = require(\"firebase\");\r\n// Required for side-effects\r\n// require(\"firebase/firestore\");","import { createContext, ReactNode, useEffect, useState } from \"react\";\r\nimport { auth, firebase } from \"../services/firebase\";\r\n\r\ntype User = {\r\n  id: string;\r\n  name: string;\r\n  avatar: string;\r\n};\r\n\r\ntype AuthContextType = {\r\n  user: User | undefined;\r\n  signInWithGoogle: () => Promise<void>;\r\n};\r\n\r\ntype AuthContextProviderProps = {\r\n  children: ReactNode;\r\n};\r\n\r\nexport const AuthContext = createContext({} as AuthContextType);\r\n\r\nexport function AuthContextProvider(props: AuthContextProviderProps) {\r\n  const [user, setUser] = useState<User>();\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged((user) => {\r\n      if (user) {\r\n        const { displayName, photoURL, uid } = user;\r\n\r\n        if (!displayName || !photoURL) {\r\n          throw new Error(\"Missing information from Google Account.\");\r\n        }\r\n        setUser({\r\n          id: uid,\r\n          name: displayName,\r\n          avatar: photoURL,\r\n        });\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n  async function signInWithGoogle() {\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n\r\n    const result = await auth.signInWithPopup(provider);\r\n\r\n    if (result.user) {\r\n      const { displayName, photoURL, uid } = result.user;\r\n\r\n      if (!displayName || !photoURL) {\r\n        throw new Error(\"Missing information from Google Account.\");\r\n      }\r\n      setUser({\r\n        id: uid,\r\n        name: displayName,\r\n        avatar: photoURL,\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, signInWithGoogle }}>\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n","import { useContext } from 'react';\r\nimport { AuthContext } from '../contexts/AuthContext';\r\n\r\nexport function useAuth() {\r\n   const value = useContext(AuthContext);\r\n\r\n   return value;\r\n}","import { Link, useHistory } from \"react-router-dom\";\r\nimport { FormEvent, useState } from \"react\";\r\n\r\nimport illustationImg from \"../assets/images/illustration.svg\";\r\nimport logoImg from \"../assets/images/logo.svg\";\r\n// import googleIconImg from \"../assets/images/google-icon.svg\";\r\nimport { Button } from \"../components/Button\";\r\n\r\n// import '../styles/global.scss';\r\nimport \"../styles/auth.scss\";\r\nimport { useAuth } from \"../hooks/useAuth\";\r\nimport { database } from \"../services/firebase\";\r\n\r\nexport function NewRoom() {\r\n  const { user } = useAuth();\r\n  const history = useHistory();\r\n  const [newRoom, setNewRoom] = useState(\"\");\r\n\r\n  async function handleCreateRoom(event: FormEvent) {\r\n    event.preventDefault();\r\n    if (newRoom.trim() === \"\") {\r\n      return;\r\n    }\r\n\r\n    const roomRef = database.ref(\"rooms\");\r\n\r\n    const firebaseRoom = await roomRef.push({\r\n      title: newRoom,\r\n      authorId: user?.id,\r\n    });\r\n\r\n    history.push(`/rooms/${firebaseRoom.key}`);\r\n  }\r\n\r\n  return (\r\n    <div id=\"page-auth\">\r\n      <aside>\r\n        <img\r\n          src={illustationImg}\r\n          alt=\"ilustração simbolizando perguntas e respostas\"\r\n        />\r\n        <strong>Crie salas de Q&amp;A ao-vivo</strong>\r\n        <p>tire as dúvidas de sua audiência em tempo-real</p>\r\n      </aside>\r\n\r\n      <main>\r\n        <div className=\"main-content\">\r\n          <img src={logoImg} alt=\"logo da Letmeask\" />\r\n          <h2>Criar uma nova sala</h2>\r\n\r\n          <form onSubmit={handleCreateRoom}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Nome da sala\"\r\n              onChange={(event) => setNewRoom(event.target.value)}\r\n              value={newRoom}\r\n            />\r\n\r\n            <Button type=\"submit\">Criar sala</Button>\r\n          </form>\r\n\r\n          <p>\r\n            Quer entrar em uma sala existe? <Link to=\"/\">clique aqui</Link>\r\n          </p>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/google-icon.0dd78068.svg\";","import { useHistory } from \"react-router-dom\";\r\n\r\nimport illustationImg from \"../assets/images/illustration.svg\";\r\nimport logoImg from \"../assets/images/logo.svg\";\r\nimport googleIconImg from \"../assets/images/google-icon.svg\";\r\nimport { Button } from \"../components/Button\";\r\n\r\n// import '../styles/global.scss';\r\nimport \"../styles/auth.scss\";\r\nimport { useAuth } from \"../hooks/useAuth\";\r\nimport { FormEvent, useState } from \"react\";\r\nimport { database } from \"../services/firebase\";\r\n\r\nexport function Home() {\r\n  const history = useHistory();\r\n  const { user, signInWithGoogle } = useAuth();\r\n  const [ roomCode, setRoomCode] = useState('');\r\n\r\n  async function handleCreateRoom() {\r\n    if(!user) {\r\n        await signInWithGoogle();\r\n    }\r\n\r\n    history.push(\"/rooms/new\");\r\n  }\r\n\r\n  async function handleJoinRoom(event: FormEvent) {\r\n    event.preventDefault();\r\n\r\n    if(roomCode.trim() === '') {\r\n      return;\r\n    }\r\n\r\n    const roomRef = await database.ref(`rooms/${roomCode}`).get();\r\n\r\n    if(!roomRef.exists()) { \r\n      alert(`Room doesn't exist.`);\r\n      return;\r\n    }\r\n\r\n    if(roomRef.val().endedAt) {\r\n      alert(`The selected room no longer exists.`);\r\n      return;\r\n    }\r\n\r\n    history.push(`/rooms/${roomCode}`);\r\n  }\r\n\r\n  return (\r\n    <div id=\"page-auth\">\r\n      <aside>\r\n        <img\r\n          src={illustationImg}\r\n          alt=\"ilustração simbolizando perguntas e respostas\"\r\n        />\r\n        <strong>Crie salas de Q&amp;A ao-vivo</strong>\r\n        <p>tire as dúvidas de sua audiência em tempo-real</p>\r\n      </aside>\r\n\r\n      <main>\r\n        <div className=\"main-content\">\r\n          <img src={logoImg} alt=\"logo da Letmeask\" />\r\n          <button onClick={handleCreateRoom} className=\"create-room\">\r\n            <img src={googleIconImg} alt=\"log do Google\" />\r\n            Crie sua sala com o Google\r\n          </button>\r\n\r\n          <div className=\"separator\"> ou entre em uma sala</div>\r\n\r\n          <form onSubmit={handleJoinRoom} >\r\n            <input \r\n            type=\"text\" \r\n            placeholder=\"digite o código da sala\" \r\n            onChange={event => setRoomCode(event.target.value)}\r\n            value={roomCode}\r\n            />\r\n\r\n            <Button type=\"submit\">Entrar na sala</Button>\r\n          </form>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","import { ReactNode } from \"react\";\r\nimport cx from 'classnames';\r\n\r\nimport \"./styles.scss\";\r\n\r\ntype QuestionProps = {\r\n  content: string;\r\n  author: {\r\n    name: string;\r\n    avatar: string;\r\n  };\r\n  children?: ReactNode;\r\n  isAnswered?: boolean;\r\n  isHighlighted?: boolean;\r\n};\r\n\r\nexport function Question({\r\n  content,\r\n  author,\r\n  children,\r\n  isAnswered = false,\r\n  isHighlighted = false,\r\n}: QuestionProps) {\r\n  return (\r\n    <div\r\n\r\n    // Maneira 'Padrão' de escrever a parte de classes para diferentes estados do botão.\r\n    //   className={`question ${isAnswered ? \"answered\" : \"\"} ${\r\n    //     isHighlighted ? \"highlighted\" : \"\"\r\n\r\n    // Confiugração das classes utilizando a biblioteca Classnames do React\r\n\r\n        className={cx(\r\n            'question',\r\n            { answered: isAnswered}, // aplica a classe answered caso isAnswered returns True\r\n            { highlighted: isHighlighted && !isAnswered}, // aplica a classe highlighted caso isHighlighted returns True\r\n        )}\r\n    >\r\n      <p>{content}</p>\r\n      <footer>\r\n        <div className=\"user-info\">\r\n          <img src={author.avatar} alt={author.name} />\r\n          <span>{author.name}</span>\r\n        </div>\r\n        <div>{children}</div>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/copy.b8f09a77.svg\";","import copyImg from \"../assets/images/copy.svg\";\r\nimport \"../styles/room-code.scss\";\r\n\r\ntype RoomCodeProps = {\r\n  code: string;\r\n};\r\n\r\nexport function RoomCode(props: RoomCodeProps) {\r\n  function copyRoomCodeToClipboard() {\r\n    navigator.clipboard.writeText(props.code);\r\n  }\r\n\r\n  return (\r\n    <button className=\"room-code\" onClick={copyRoomCodeToClipboard}>\r\n      <div>\r\n        <img src={copyImg} alt=\"Copy room code\" />\r\n      </div>\r\n      <span>Sala #-Mr4sZdksBkgLcUVLTvJ</span>\r\n    </button>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { NumericLiteral } from \"typescript\";\r\nimport { database } from \"../services/firebase\";\r\nimport { useAuth } from \"./useAuth\";\r\n\r\ntype QuestionType = {\r\n  id: string;\r\n  author: {\r\n    avatar: string;\r\n    name: string;\r\n  };\r\n  content: string;\r\n  isAnswered: boolean;\r\n  isHighlighted: boolean;\r\n  likeCount: number;\r\n  likeId: string | undefined;\r\n};\r\n\r\ntype FirebaseQuestions = Record<\r\n  string,\r\n  {\r\n    author: {\r\n      avatar: string;\r\n      name: string;\r\n    };\r\n    content: string;\r\n    isAnswered: boolean;\r\n    isHighlighted: boolean;\r\n    likes: Record<\r\n      string,\r\n      {\r\n        authorId: string;\r\n      }\r\n    >;\r\n  }\r\n>;\r\n\r\nexport function useRoom(roomId: string) {\r\n  const { user } = useAuth();\r\n  const [questions, setQuestions] = useState<QuestionType[]>([]);\r\n  const [title, setTitle] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const roomRef = database.ref(`rooms/${roomId}`);\r\n\r\n    roomRef.on(\"value\", (room) => {\r\n      const databaseRoom = room.val();\r\n      const firebaseQuestions: FirebaseQuestions = databaseRoom.questions ?? {};\r\n\r\n      const parsedQuestions = Object.entries(firebaseQuestions).map(\r\n        ([key, value]) => {\r\n          return {\r\n            id: key,\r\n            content: value.content,\r\n            author: value.author,\r\n            isHighlighted: value.isHighlighted,\r\n            isAnswered: value.isAnswered,\r\n            likeCount: Object.values(value.likes ?? {}).length,\r\n            likeId: Object.entries(value.likes ?? {}).find(([key, like]) => like.authorId === user?.id)?.[0],\r\n          };\r\n        }\r\n      );\r\n\r\n      setTitle(databaseRoom.title);\r\n      setQuestions(parsedQuestions);\r\n    });\r\n\r\n    return () => {\r\n      roomRef.off('value');\r\n    }\r\n  }, [roomId, user?.id]);\r\n\r\n  return { questions, title };\r\n}\r\n","import { FormEvent, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport logoImg from \"../assets/images/logo.svg\";\r\nimport { Button } from \"../components/Button\";\r\nimport { Question } from \"../components/Question\";\r\nimport { RoomCode } from \"../components/RoomCode\";\r\nimport { useAuth } from \"../hooks/useAuth\";\r\nimport { useRoom } from \"../hooks/useRoom\";\r\nimport { database } from \"../services/firebase\";\r\nimport \"../styles/room.scss\";\r\n\r\ntype RoomParams = {\r\n  id: string;\r\n};\r\n\r\nexport function Room() {\r\n  const { user } = useAuth();\r\n  const params = useParams<RoomParams>();\r\n  const [newQuestion, setNewQuestion] = useState(\"\");\r\n  const roomId = params.id;\r\n  const { title, questions } = useRoom(roomId);\r\n\r\n  async function handleSendQuestion(event: FormEvent) {\r\n    event.preventDefault();\r\n\r\n    if (newQuestion.trim() === \"\") {\r\n      return;\r\n    }\r\n\r\n    if (!user) {\r\n      throw new Error(\"You must be logged in to submit a question\");\r\n    }\r\n\r\n    const question = {\r\n      content: newQuestion,\r\n      author: {\r\n        name: user.name,\r\n        avatar: user.avatar,\r\n      },\r\n      isHighlighted: false,\r\n      isAnswered: false,\r\n    };\r\n\r\n    await database.ref(`rooms/${roomId}/questions`).push(question);\r\n\r\n    setNewQuestion(\"\");\r\n  }\r\n\r\n  async function handleLikeQuestion(\r\n    questionId: string,\r\n    likeId: string | undefined\r\n  ) {\r\n    if (likeId) {\r\n      await database\r\n        .ref(`rooms/${roomId}/questions/${questionId}/likes/${likeId}`)\r\n        .remove();\r\n    } else {\r\n      await database.ref(`rooms/${roomId}/questions/${questionId}/likes`).push({\r\n        authorId: user?.id,\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div id=\"page-room\">\r\n      <header>\r\n        <div className=\"content\">\r\n          <img src={logoImg} alt=\"letmeask\" />\r\n          <RoomCode code={params.id} />\r\n        </div>\r\n      </header>\r\n\r\n      <main className=\"content\">\r\n        <div className=\"room-title\">\r\n          <h1>Sala {title}</h1>\r\n          {questions.length > 0 && <span>{questions.length} Pergunta(s)</span>}\r\n        </div>\r\n\r\n        <form onSubmit={handleSendQuestion}>\r\n          <textarea\r\n            placeholder=\"O que você gostaria de perguntar\"\r\n            onChange={(event) => setNewQuestion(event.target.value)}\r\n            value={newQuestion}\r\n          />\r\n\r\n          <div className=\"form-footer\">\r\n            {user ? (\r\n              <div className=\"user-info\">\r\n                <img src={user.avatar} alt={user.name} />\r\n                <span>{user.name}</span>\r\n              </div>\r\n            ) : (\r\n              <span>\r\n                Para enviar uma pergunta, <button>faça seu login</button>\r\n              </span>\r\n            )}\r\n\r\n            <Button type=\"submit\" disabled={!user}>\r\n              Enviar pergunta\r\n            </Button>\r\n          </div>\r\n        </form>\r\n\r\n        <div className=\"question-list\">\r\n          {questions.map((question) => {\r\n            return (\r\n              <Question\r\n                key={question.id}\r\n                content={question.content}\r\n                author={question.author}\r\n                isAnswered={question.isAnswered}\r\n                isHighlighted={question.isHighlighted}\r\n              >\r\n                {!question.isAnswered && (\r\n                  <>\r\n                    <button\r\n                      className={`like-button ${\r\n                        question.likeId ? \"liked\" : \"\"\r\n                      }`}\r\n                      type=\"button\"\r\n                      aria-label=\"Marcar como Gostei\"\r\n                      onClick={() =>\r\n                        handleLikeQuestion(question.id, question.likeId)\r\n                      }\r\n                    >\r\n                      {question.likeCount > 0 && (\r\n                        <span>{question.likeCount}</span>\r\n                      )}\r\n                      <svg\r\n                        width=\"24\"\r\n                        height=\"24\"\r\n                        viewBox=\"0 0 24 24\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                      >\r\n                        <path\r\n                          d=\"M7 22H4C3.46957 22 2.96086 21.7893 2.58579 21.4142C2.21071 21.0391 2 20.5304 2 20V13C2 12.4696 2.21071 11.9609 2.58579 11.5858C2.96086 11.2107 3.46957 11 4 11H7M14 9V5C14 4.20435 13.6839 3.44129 13.1213 2.87868C12.5587 2.31607 11.7956 2 11 2L7 11V22H18.28C18.7623 22.0055 19.2304 21.8364 19.5979 21.524C19.9654 21.2116 20.2077 20.7769 20.28 20.3L21.66 11.3C21.7035 11.0134 21.6842 10.7207 21.6033 10.4423C21.5225 10.1638 21.3821 9.90629 21.1919 9.68751C21.0016 9.46873 20.7661 9.29393 20.5016 9.17522C20.2371 9.0565 19.9499 8.99672 19.66 9H14Z\"\r\n                          stroke=\"#737380\"\r\n                          strokeWidth=\"1.5\"\r\n                          strokeLinecap=\"round\"\r\n                          strokeLinejoin=\"round\"\r\n                        />\r\n                      </svg>\r\n                    </button>\r\n                  </>\r\n                )}\r\n              </Question>\r\n            );\r\n          })}\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/delete.a8f66609.svg\";","export default __webpack_public_path__ + \"static/media/check.8308dd4d.svg\";","export default __webpack_public_path__ + \"static/media/answer.16004e01.svg\";","import { useHistory, useParams } from \"react-router-dom\";\r\n\r\nimport logoImg from \"../assets/images/logo.svg\";\r\nimport { Button } from \"../components/Button\";\r\nimport { Question } from \"../components/Question\";\r\nimport { RoomCode } from \"../components/RoomCode\";\r\nimport { useAuth } from \"../hooks/useAuth\";\r\nimport { useRoom } from \"../hooks/useRoom\";\r\nimport deleteImg from \"../assets/images/delete.svg\";\r\nimport checkImg from \"../assets/images/check.svg\";\r\nimport answerImg from \"../assets/images/answer.svg\";\r\n\r\nimport \"../styles/room.scss\";\r\nimport { database } from \"../services/firebase\";\r\n\r\ntype RoomParams = {\r\n  id: string;\r\n};\r\n\r\nexport function AdminRoom() {\r\n  // const { user } = useAuth();\r\n  const history = useHistory();\r\n  const params = useParams<RoomParams>();\r\n  const roomId = params.id;\r\n  const { title, questions } = useRoom(roomId);\r\n\r\n  // console.log(questions)\r\n\r\n  async function handleEndRoom() {\r\n    await database.ref(`rooms/${roomId}`).update({\r\n      endedAt: new Date(),\r\n    });\r\n\r\n    history.push(\"/\");\r\n  }\r\n\r\n  async function handleDeleteQuestion(questionId: string) {\r\n    if (window.confirm(\"Tem certeza que você deseja excluir essa pergunta?\")) {\r\n      await database.ref(`rooms/${roomId}/questions/${questionId}`).remove();\r\n    }\r\n  }\r\n\r\n  async function handleCheckQuestionAsAnswered(questionId: string) {\r\n    await database.ref(`rooms/${roomId}/questions/${questionId}`).update({\r\n      isAnswered: true,\r\n    });\r\n  }\r\n\r\n  async function handleHighlightQuestion(questionId: string) {\r\n    await database.ref(`rooms/${roomId}/questions/${questionId}`).update({\r\n      isHighlighted: true,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div id=\"page-room\">\r\n      <header>\r\n        <div className=\"content\">\r\n          <img src={logoImg} alt=\"letmeask\" />\r\n          <div>\r\n            <RoomCode code={params.id} />\r\n            <Button isOutlined onClick={handleEndRoom}>\r\n              Encerrar sala\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </header>\r\n\r\n      <main className=\"content\">\r\n        <div className=\"room-title\">\r\n          <h1>Sala {title}</h1>\r\n          {questions.length > 0 && <span>{questions.length} Pergunta(s)</span>}\r\n        </div>\r\n\r\n        <div className=\"question-list\">\r\n          {questions.map((question) => {\r\n            return (\r\n              <Question\r\n                key={question.id}\r\n                content={question.content}\r\n                author={question.author}\r\n                isAnswered={question.isAnswered}\r\n                isHighlighted={question.isHighlighted}\r\n              >\r\n\r\n                {!question.isAnswered &&  (\r\n                  <>\r\n                  <button\r\n                  type=\"button\"\r\n                  onClick={() => handleCheckQuestionAsAnswered(question.id)}\r\n                >\r\n                  <img src={checkImg} alt=\"Marcar pergunta como respondida\" />\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => handleHighlightQuestion(question.id)}\r\n                >\r\n                  <img src={answerImg} alt=\"Dar destaque à pergunta\" />\r\n                </button>\r\n                </>\r\n                )\r\n          }\r\n\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => handleDeleteQuestion(question.id)}\r\n                >\r\n                  <img src={deleteImg} alt=\"Remover pergunta\" />\r\n                </button>\r\n              </Question>\r\n            );\r\n          })}\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","import { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\n\r\nimport { NewRoom } from \"./pages/NewRoom\";\r\nimport { Home } from \"./pages/Home\";\r\n\r\nimport { AuthContextProvider } from \"./contexts/AuthContext\";\r\nimport { Room } from \"./pages/Room\";\r\nimport { AdminRoom } from \"./pages/AdminRoom\";\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <AuthContextProvider>\r\n        <Switch>\r\n          <Route path=\"/\" exact component={Home} />\r\n          <Route path=\"/rooms/new\" component={NewRoom} />\r\n          <Route path=\"/rooms/:id\" component={Room} />\r\n          <Route path=\"/admin/rooms/:id\" component={AdminRoom} />\r\n        </Switch>\r\n      </AuthContextProvider>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n// import './services/firebase';\r\n import './styles/global.scss'\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}